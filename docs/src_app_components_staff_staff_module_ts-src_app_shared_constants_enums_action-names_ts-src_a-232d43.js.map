{"version":3,"file":"src_app_components_staff_staff_module_ts-src_app_shared_constants_enums_action-names_ts-src_a-232d43.js","mappings":"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","sources":["./src/app/components/staff/staff-dashboard/staff-dashboard.component.ts","./src/app/components/staff/staff-dashboard/staff-dashboard.component.html","./src/app/components/staff/staff-routing.module.ts","./src/app/components/staff/staff.module.ts","./src/app/shared/constants/enums/action-names.ts","./src/app/shared/constants/enums/toaster.ts","./src/app/shared/services/01_base-service/base.service.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-staff-dashboard',\r\n  templateUrl: './staff-dashboard.component.html',\r\n  styleUrls: ['./staff-dashboard.component.scss']\r\n})\r\nexport class StaffDashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"card radius-10 m-5\">\r\n    <div class=\"card-header\">\r\n        <div class=\"row text-center m-5\">\r\n            <div class=\"col\">\r\n                <button type=\"button\" class=\"btn-lg btn-outline-primary px-5 radius-30 home-button\" routerLink=\"appointment-calendar\">Appointment calendar</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"row text-center m-5\">\r\n            <div class=\"col\">\r\n                <button type=\"button\" class=\"btn-lg btn-outline-primary px-5 radius-30 home-button\" routerLink=\"new-appointment\">New appointment</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"row text-center m-5\">\r\n            <div class=\"col\">\r\n                <button type=\"button\" class=\"btn-lg btn-outline-primary px-5 radius-30 home-button\" routerLink=\"payment\">Finance</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> \r\n","import { StaffDashboardComponent } from './staff-dashboard/staff-dashboard.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppointmentCalendarComponent } from '../lawyer/appointment-calendar/appointment-calendar.component';\r\nimport { NewAppointmentComponent } from '../lawyer/new-appointment/new-appointment.component';\r\nimport { PaymentComponent } from '../home/payment/payment.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '' , component: StaffDashboardComponent, data: {title: 'Dashboard'} },\r\n  { path: 'appointment-calendar' , component: AppointmentCalendarComponent, data: {title: 'Calendar'}  },\r\n  { path: 'new-appointment' , component: NewAppointmentComponent, data: {title: 'New Appointment'}  },\r\n  { path: 'payment' , component: PaymentComponent, data: {title: 'Payment'}  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class StaffRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { StaffRoutingModule } from './staff-routing.module';\r\nimport { StaffDashboardComponent } from './staff-dashboard/staff-dashboard.component';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    StaffDashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    StaffRoutingModule,\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n  ]\r\n})\r\nexport class StaffModule { }\r\n","export enum ApiActionName {\r\n  Login = 'login',\r\n  GetUserById = 'users',\r\n  GetUserByUserTypeOrSortByOrSerchByString = 'users',\r\n  CreateUser = 'user',\r\n  SignUp = 'signUp',\r\n  UpdateUser = 'user',\r\n  DeleteUserById = 'user/id',\r\n  SendOTP = 'sendOtp',\r\n  GetTimeSlotsByLawyerId = 'timeslots/lawyerId',\r\n  CreateTimeSlot = 'timeSlots',\r\n  GetStudentFormsByStudentId = 'studentPointForms/studentId',\r\n  CreateStudentForm = 'studentPointForms',\r\n  UpdateStudentForms = 'studentPointForms',\r\n  DeleteStudentFormById = 'studentPointForms/id',\r\n  GetCompanies = 'companies',\r\n  CreateCompany = 'company',\r\n  UpdateCompany = 'company',\r\n  DeleteCompany = 'company/id',\r\n  GetAppointments = 'appointments',\r\n  CreateAppointments = 'appointment',\r\n  UpdateAppointments = 'appointments',\r\n  DeleteAppointment = 'appointment/id',\r\n  GetAppointmentsByStatusOrLawyerId = 'appointments',\r\n  AddLawyerRequestedFile='lawyerRequestedFiles',\r\n  GetLawyerRequestedFile='getUserRequestedFiles',\r\n  UserFileDetails='userfiledetails',\r\n  UserFileUpload ='userFileUpload',\r\n  GetStudentUploadedFile='getUserUploadedFile',\r\n  deleteUploadedFile = 'userUploadedFile',\r\n  studentFileUpload = 'studentFileUpload',\r\n  getPointForm='questions',\r\n  getQuestion='question'\r\n}\r\n","export class Message {\r\n    public static toasterTimeout = 5000;\r\n    public static toasterSuccess = 'Success';\r\n    public static toasterFailure = 'Failed';\r\n    public static toasterSignUpSuccess = 'User Signup Success';\r\n    public static toasterLoginSuccess = 'User Login.';\r\n\r\n    public static toasterEmptyAppointment = 'No scheduled appointments.';\r\n    public static toasterAppointmentError = 'Something wrong.';\r\n    public static toasterAppointmentCancel = 'Appointment cancel.';\r\n\r\n    public static toasterUpdateUser = 'Profile updated successfully.';\r\n    public static toasterUpdateUserError = 'Profile update.';\r\n    public static toasterUpdateAsSame = 'Same user profile';\r\n    public static toasterSendOtp = 'Code sent successfully';\r\n    public static toasterNotExistEmail = 'There is no user with entered email';\r\n    public static toasterUserNormalSignIn = 'Please use the email and password to sign in';\r\n    public static toasterNotStudent = 'You are not a student, please use the email and password to sign in';\r\n    public static toasterSignInWithGoogle = 'You have sign in with google. please use google sign in';\r\n    public static toasterSignInWithFacebook = 'You have sign in with facebook. please use facebook sign in';\r\n    public static toasterInvalidAuthType = 'You signed in using social account. you can\\'t proceed with password reset.';\r\n    public static toasterNotExistOtp = 'Invalid code';\r\n    public static toasterResetPassword = 'Reset password';\r\n    public static toasterOtpValid = 'Code valid, continue password reset';\r\n\r\n    public static fileSavedSuccess = 'File Saved Success';\r\n\r\n    public static toasterCreateStaff = 'Staff created successfully.';\r\n    public static toasterCreateStaffError = 'Staff create.';\r\n\r\n    public static toasterDocumentRequest = 'Document request.';\r\n\r\n    public static toasterDocumentUpload = 'Document upload.';\r\n\r\n    public static toasterDocumentDelete = 'Document delete.';\r\n\r\n    public static toasterPointFormSubmit = 'Point form submit.';\r\n    public static toasterPointFormUpdate = 'Point form update.';\r\n\r\n    public static toasterAttemptLimitExceed = 'Already submitted 3 times.';\r\n    \r\n\r\n\r\n}","import { environment } from 'src/environments/environment';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BaseService {\r\n\r\n  baseApiUrl:string = environment.baseApiUrl;\r\n  constructor() { }\r\n\r\n  public getBaseUrl = (route: string) => {\r\n    return `${this.baseApiUrl}/${route}`;\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}