{"version":3,"file":"src_app_components_account-settings_account-settings_module_ts.js","mappings":"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","sources":["./src/app/components/account-settings/account-settings-routing.module.ts","./src/app/components/account-settings/account-settings.module.ts","./src/app/components/account-settings/settings/settings.component.ts","./src/app/components/account-settings/settings/settings.component.html","./src/app/shared/constants/enums/action-names.ts","./src/app/shared/constants/enums/toaster.ts","./src/app/shared/services/01_base-service/base.service.ts","./src/app/shared/services/user.service.ts"],"sourcesContent":["import { SettingsComponent } from './settings/settings.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: '' , component: SettingsComponent, data: {title: 'Settings'} }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountSettingsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AccountSettingsRoutingModule } from './account-settings-routing.module';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { NgbModalModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { MatButtonModule, MatIconModule } from '@angular/material';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SettingsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AccountSettingsRoutingModule,\r\n    NgbModalModule,\r\n    SharedModule,\r\n    MatIconModule, \r\n    MatButtonModule,\r\n    NgbModule\r\n  ]\r\n})\r\nexport class AccountSettingsModule { }\r\n","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\nimport { User } from 'src/app/shared/models/user.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Message } from 'src/app/shared/constants/enums/toaster';\r\nimport { FileService } from 'src/app/shared/services/file.service';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss'],\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  name: string;\r\n  state: string;\r\n  companyName: string;\r\n  oneHourFee: number;\r\n  halfHourFee: number;\r\n  user: User;\r\n  editForm: FormGroup;\r\n  isCharging: boolean;\r\n  isEdit: boolean = true;\r\n  isStaff: boolean;\r\n\r\n  \r\n  @ViewChild('avatarImg', { static: true }) avatarImgElement: ElementRef;\r\n\r\n  photo: string;\r\n  @Output() photoUpdated = new EventEmitter<string>();\r\n\r\n  showAddPhotoOverlay = false;\r\n  userId: number;\r\n\r\n  constructor(private userService: UserService, \r\n    private editBuilder: FormBuilder, \r\n    public toaster : ToastrService,\r\n    private fileService: FileService) { }\r\n\r\n  ngOnInit(): void {\r\n    //need to pass actual logged in user id \r\n    this.userId = Number(localStorage.getItem(\"userId\"))\r\n    this.getProfileByLoggedInUserId(this.userId);\r\n  }\r\n\r\n  getProfileByLoggedInUserId(id: number) {\r\n    //get userById endpoint\r\n    this.userService.getUserById(id).subscribe((response) => {\r\n      console.log(response,\"user\")\r\n      this.user = response.data;\r\n      this.name= this.user.firstName;\r\n      this.state = this.user.state;\r\n      this.companyName = this.user.companyName;\r\n      this.oneHourFee = this.user.consultationFeeForOneHour;\r\n      this.halfHourFee = this.user.consultationFeeForHalfAndHour;\r\n      this.isCharging = this.user.chargingForExtraMin;\r\n      this.photo = this.user.profileImageUrl;\r\n      localStorage.setItem(\"profileImage\", this.photo);\r\n\r\n      if(this.user.userType=='staff'){\r\n        this.isStaff=true;\r\n      }\r\n\r\n      //fetch user fields to edit form\r\n      this.createForm();\r\n\r\n    });\r\n  }\r\n\r\n  createForm(){ \r\n    this.editForm = this.editBuilder.group({\r\n      fName: [this.name, Validators.required],\r\n      fState: [this.state, Validators.required],\r\n      fCompanyName: [this.companyName, Validators.required],\r\n      fHourCharge: [this.oneHourFee],\r\n      fHalfHourCharge: [this.halfHourFee],\r\n      fIsCharging: [this.isCharging]\r\n    });\r\n  }\r\n\r\n  //set extra minute charging true or false\r\n  chargingChange(evt: any): void {\r\n    this.isCharging = evt.target.checked;\r\n  }\r\n\r\n  //edit user profile\r\n  saveEditedDetails(){\r\n    let editedName = this.editForm.controls['fName'].value;\r\n    let editedState = this.editForm.controls['fState'].value;\r\n    let editedCompanyName = this.editForm.controls['fCompanyName'].value;\r\n    let editedHourFee = this.editForm.controls['fHourCharge'].value;\r\n    let editedHalfHourFee = this.editForm.controls['fHalfHourCharge'].value;\r\n    let editedIsCharging = this.editForm.controls['fIsCharging'].value;\r\n\r\n    if(\r\n      this.editForm.controls['fName'].value!=this.name\r\n      ||this.editForm.controls['fState'].value!=this.state\r\n      ||this.editForm.controls['fCompanyName'].value!=this.companyName\r\n      ||this.editForm.controls['fHourCharge'].value!=this.oneHourFee\r\n      ||this.editForm.controls['fHalfHourCharge'].value!=this.halfHourFee\r\n      ||this.editForm.controls['fIsCharging'].value!=this.isCharging\r\n    ){\r\n      this.isEdit = true;\r\n      let body: User = {\r\n        id: this.user.id,\r\n        firstName: editedName,\r\n        lastName: this.user.lastName,\r\n        userType: this.user.userType,\r\n        email: this.user.email,\r\n        companyName: editedCompanyName,\r\n        dob: this.user.dob,\r\n        studentType: this.user.studentType,\r\n        state: editedState,\r\n        noOfReviews: this.user.noOfReviews,\r\n        yearsOfExperience: this.user.yearsOfExperience,\r\n        consultationFeeForOneHour: editedHourFee,\r\n        consultationFeeForHalfAndHour: editedHalfHourFee,\r\n        chargingForExtraMin: editedIsCharging,\r\n        profileImageUrl: this.photo\r\n      }\r\n  \r\n      this.userService.updateUser(body).subscribe(res => {\r\n        console.log(res,\"update\")\r\n        this.getProfileByLoggedInUserId(this.user.id);\r\n        this.toaster.success(\r\n          Message.toasterUpdateUser,\r\n          Message.toasterSuccess,\r\n          {\r\n            timeOut: Message.toasterTimeout,\r\n          }\r\n        );\r\n      },error =>{\r\n        this.toaster.error(\r\n          Message.toasterUpdateUserError,\r\n          Message.toasterFailure,\r\n          {\r\n            timeOut: Message.toasterTimeout,\r\n          }\r\n        );\r\n      })\r\n    }else{\r\n      this.isEdit = false;\r\n      this.toaster.success(\r\n        Message.toasterUpdateAsSame,\r\n        Message.toasterSuccess,\r\n        {\r\n          timeOut: Message.toasterTimeout,\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n    addPhoto(event) {\r\n\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = () => {\r\n        this.avatarImgElement.nativeElement.src = fileReader.result;\r\n      };\r\n      fileReader.readAsDataURL(event.target.files[0]);\r\n      let image = event.target.files[0];\r\n      let fileToUpload = event.target.files[0];\r\n      const formData = new FormData();\r\n      formData.append('file', fileToUpload, fileToUpload.name);\r\n      console.log(image )\r\n  \r\n      // save the image in the back end database\r\n      this.fileService.userFileUpload(formData).subscribe(\r\n        res => {\r\n          console.log(res,\"image url\");\r\n          let url = res;\r\n          this.photo = url;\r\n          this.user.profileImageUrl = url;\r\n\r\n          this.userService.updateUser(this.user).subscribe(res => {\r\n            console.log(res,\"updated user\");\r\n            localStorage.setItem(\"profileImage\", this.photo);\r\n            this.toaster.success(\r\n              Message.toasterUpdateUser,\r\n              Message.toasterSuccess,\r\n              {\r\n                timeOut: Message.toasterTimeout,\r\n              }\r\n            );\r\n            location.reload();\r\n          })\r\n  \r\n      },\r\n      (error) => {\r\n        console.log(error, 'error')\r\n      }\r\n      );\r\n    }\r\n  \r\n    openFileInput(fileInput){\r\n      fileInput.click()\r\n      this.showAddPhotoOverlay=false\r\n    }\r\n  \r\n    removePhoto() {\r\n      this.avatarImgElement.nativeElement.src = '';\r\n      this.photo = null;\r\n      this.user.profileImageUrl = this.photo;\r\n      this.userService.updateUser(this.user).subscribe(res => {\r\n        console.log(res,\"updated user photo\");\r\n        localStorage.setItem(\"profileImage\", this.photo);\r\n        this.toaster.success(\r\n          Message.toasterUpdateUser,\r\n          Message.toasterSuccess,\r\n          {\r\n            timeOut: Message.toasterTimeout,\r\n          }\r\n        );\r\n        location.reload();\r\n      })\r\n    }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"row g-0\">\r\n    <div class=\"col-md-2 p-5 border-end\">\r\n      <div id=\"avatar-container\">\r\n\r\n        <img id=\"avatar-photo\" #avatarImg class=\"avatar-photo\"\r\n          [src]=\"photo && photo !== '' ? photo : '/assets/images/gallery/user_avatar.png'\" (mouseenter)=\"showAddPhotoOverlay=true\"\r\n          alt=\"avatar photo\">\r\n      \r\n        <div *ngIf=\"showAddPhotoOverlay\" id=\"add-photo-overlay\" class=\"avatar-photo\"\r\n          (mouseleave)=\"showAddPhotoOverlay=false\">\r\n      \r\n          <button id=\"add-avatar-photo-button\" class=\"center-positon-absolute\" mat-icon-button (click)=\"openFileInput(fileInput)\">\r\n            <mat-icon>add_a_photo</mat-icon>\r\n          </button>\r\n      \r\n          <mat-icon id=\"remove-avatar-photo-button\" *ngIf=\"photo && photo !== ''\"  (click)=\"removePhoto()\"\r\n            matTooltip=\"remove this photo\">close</mat-icon>\r\n        </div>\r\n      \r\n        <!-- Input file -->\r\n        <input #fileInput type=\"file\" (change)=\"addPhoto($event)\" name=\"avatar\" accept=\"image/png, image/jpeg\"\r\n            style=\"display:none;\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-10\">\r\n      <div class=\"card-body\">\r\n        <dl class=\"row\">\r\n          <dt class=\"col-sm-4\">Name</dt>\r\n          <dd class=\"col-sm-8\" [(ngModel)]=\"name\" ngDefaultControl>{{user?.firstName}}</dd>\r\n\r\n          <dt class=\"col-sm-4\">State</dt>\r\n          <dd class=\"col-sm-8\" [(ngModel)]=\"state\" ngDefaultControl>{{user?.state}}</dd>\r\n\r\n          <dt class=\"col-sm-4\">Company name</dt>\r\n          <dd class=\"col-sm-8\" [(ngModel)]=\"companyName\" ngDefaultControl>{{user?.companyName}}</dd><br>\r\n\r\n          <div class=\"mt-3\" *ngIf=\"!isStaff\">\r\n            <label class=\"col\">Consultation fee ($)</label>\r\n          </div>\r\n          \r\n          <dt class=\"col-sm-4\" *ngIf=\"!isStaff\">One hour</dt>\r\n          <dd class=\"col-sm-8\" *ngIf=\"!isStaff\" [(ngModel)]=\"oneHourFee\" ngDefaultControl>{{user?.consultationFeeForOneHour}}</dd>\r\n\r\n          <dt class=\"col-sm-4\" *ngIf=\"!isStaff\">Half an hour</dt>\r\n          <dd class=\"col-sm-8\" *ngIf=\"!isStaff\" [(ngModel)]=\"halfHourFee\" ngDefaultControl>{{user?.consultationFeeForHalfAndHour}}</dd>\r\n\r\n          <dt class=\"col-sm-4\" *ngIf=\"!isStaff\"><label>Charging for extra minutes</label></dt>\r\n          <dd class=\"col-sm-8\" *ngIf=\"!isStaff\"><input type=\"checkbox\" class=\"checkbox-round\" id=\"quantity\" [(ngModel)]=\"isCharging\" ngDefaultControl [checked]=\"isCharging\" value=\"isCharging\" [disabled]=\"true\"/></dd>\r\n        </dl>\r\n        <hr>\r\n        <div class=\"row row-cols-auto row-cols-1 row-cols-md-3 align-items-center\">\r\n        </div>\r\n        <div class=\"col\">\r\n          <!-- Button trigger modal -->\r\n          <button type=\"button\" class=\"btn btn-outline-primary\" data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#exampleLargeModal\">Update Details</button>\r\n          <!-- Modal -->\r\n          <div class=\"modal fade\" id=\"exampleLargeModal\" tabindex=\"-1\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                  <h5 class=\"modal-title\">Update Profile and Consultation Details</h5>\r\n                  <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <form [formGroup]=\"editForm\" *ngIf=\"editForm\" class=\"row g-3\">\r\n                    <div class=\"col-md-12\">\r\n                      <label for=\"inputName\" class=\"form-label\">Name</label>\r\n                      <input type=\"text\" class=\"form-control\" formControlName=\"fName\" id=\"inputName\">\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                      <label for=\"inputState\" class=\"form-label\">State</label>\r\n                      <input type=\"text\" class=\"form-control\" formControlName=\"fState\" id=\"inputState\">\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                      <label for=\"inputType\" class=\"form-label\">Company name</label>\r\n                      <input type=\"text\" class=\"form-control\" formControlName=\"fCompanyName\" id=\"inputCompanyName\">\r\n                    </div>\r\n                    <div *ngIf=\"!isStaff\">\r\n                      <label>Consultation fee ($)</label>\r\n                    </div>\r\n                    <div class=\"col-md-6\" *ngIf=\"!isStaff\">\r\n                      <label for=\"inputType\" class=\"form-label\">One hour</label>\r\n                      <input type=\"text\" class=\"form-control\" formControlName=\"fHourCharge\" id=\"inputCompanyName\">\r\n                    </div>\r\n                    <div class=\"col-md-6\" *ngIf=\"!isStaff\">\r\n                      <label for=\"inputType\" class=\"form-label\">Half hour</label>\r\n                      <input type=\"text\" class=\"form-control\" formControlName=\"fHalfHourCharge\" id=\"inputCompanyName\">\r\n                    </div>\r\n                    <div class=\"col-md-12\" *ngIf=\"!isStaff\">\r\n                      <input type=\"checkbox\" class=\"checkbox-round me-3\" id=\"quantity\" formControlName=\"fIsCharging\" [checked]=\"isCharging\" value=\"isCharging\" (change)=\"chargingChange($event)\"/>\r\n                      <label for=\"inputType\" class=\"form-label\">Charging for extra minutes</label>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                  <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                  <button type=\"submit\" class=\"btn btn-primary\" (click)=\"saveEditedDetails()\">Save changes</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <hr />\r\n</div>\r\n","export enum ApiActionName {\r\n  Login = 'login',\r\n  GetUserById = 'users',\r\n  GetUserByUserTypeOrSortByOrSerchByString = 'users',\r\n  CreateUser = 'user',\r\n  SignUp = 'signUp',\r\n  UpdateUser = 'user',\r\n  DeleteUserById = 'user/id',\r\n  SendOTP = 'sendOtp',\r\n  GetTimeSlotsByLawyerId = 'timeslots/lawyerId',\r\n  CreateTimeSlot = 'timeSlots',\r\n  GetStudentFormsByStudentId = 'studentPointForms/studentId',\r\n  CreateStudentForm = 'studentPointForms',\r\n  UpdateStudentForms = 'studentPointForms',\r\n  DeleteStudentFormById = 'studentPointForms/id',\r\n  GetCompanies = 'companies',\r\n  CreateCompany = 'company',\r\n  UpdateCompany = 'company',\r\n  DeleteCompany = 'company/id',\r\n  GetAppointments = 'appointments',\r\n  CreateAppointments = 'appointment',\r\n  UpdateAppointments = 'appointments',\r\n  DeleteAppointment = 'appointment/id',\r\n  GetAppointmentsByStatusOrLawyerId = 'appointments',\r\n  AddLawyerRequestedFile='lawyerRequestedFiles',\r\n  GetLawyerRequestedFile='getUserRequestedFiles',\r\n  UserFileDetails='userfiledetails',\r\n  UserFileUpload ='userFileUpload',\r\n  GetStudentUploadedFile='getUserUploadedFile',\r\n  deleteUploadedFile = 'userUploadedFile',\r\n  studentFileUpload = 'studentFileUpload',\r\n  getPointForm='questions',\r\n  getQuestion='question'\r\n}\r\n","export class Message {\r\n    public static toasterTimeout = 5000;\r\n    public static toasterSuccess = 'Success';\r\n    public static toasterFailure = 'Failed';\r\n    public static toasterSignUpSuccess = 'User Signup Success';\r\n    public static toasterLoginSuccess = 'User Login.';\r\n\r\n    public static toasterEmptyAppointment = 'No scheduled appointments.';\r\n    public static toasterAppointmentError = 'Something wrong.';\r\n    public static toasterAppointmentCancel = 'Appointment cancel.';\r\n\r\n    public static toasterUpdateUser = 'Profile updated successfully.';\r\n    public static toasterUpdateUserError = 'Profile update.';\r\n    public static toasterUpdateAsSame = 'Same user profile';\r\n    public static toasterSendOtp = 'Code sent successfully';\r\n    public static toasterNotExistEmail = 'There is no user with entered email';\r\n    public static toasterUserNormalSignIn = 'Please use the email and password to sign in';\r\n    public static toasterNotStudent = 'You are not a student, please use the email and password to sign in';\r\n    public static toasterSignInWithGoogle = 'You have sign in with google. please use google sign in';\r\n    public static toasterSignInWithFacebook = 'You have sign in with facebook. please use facebook sign in';\r\n    public static toasterInvalidAuthType = 'You signed in using social account. you can\\'t proceed with password reset.';\r\n    public static toasterNotExistOtp = 'Invalid code';\r\n    public static toasterResetPassword = 'Reset password';\r\n    public static toasterOtpValid = 'Code valid, continue password reset';\r\n\r\n    public static fileSavedSuccess = 'File Saved Success';\r\n\r\n    public static toasterCreateStaff = 'Staff created successfully.';\r\n    public static toasterCreateStaffError = 'Staff create.';\r\n\r\n    public static toasterDocumentRequest = 'Document request.';\r\n\r\n    public static toasterDocumentUpload = 'Document upload.';\r\n\r\n    public static toasterDocumentDelete = 'Document delete.';\r\n\r\n    public static toasterPointFormSubmit = 'Point form submit.';\r\n    public static toasterPointFormUpdate = 'Point form update.';\r\n\r\n    public static toasterAttemptLimitExceed = 'Already submitted 3 times.';\r\n    \r\n\r\n\r\n}","import { environment } from 'src/environments/environment';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BaseService {\r\n\r\n  baseApiUrl:string = environment.baseApiUrl;\r\n  constructor() { }\r\n\r\n  public getBaseUrl = (route: string) => {\r\n    return `${this.baseApiUrl}/${route}`;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ApiActionName } from '../constants/enums/action-names';\r\nimport { BaseService } from './01_base-service/base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService extends BaseService {\r\n  constructor(private http: HttpClient) {\r\n    super();\r\n  }\r\n\r\n  getUsers(): Observable<any> {\r\n    return this.http.get<any[]>(this.getBaseUrl(ApiActionName.GetUserById));\r\n  }\r\n\r\n  getUsersByType(user: any): Observable<any> {\r\n    return this.http.post<any[]>(\r\n      this.getBaseUrl(ApiActionName.GetUserByUserTypeOrSortByOrSerchByString),\r\n      user\r\n    );\r\n  }\r\n\r\n  createUser(user: any): Observable<any> {\r\n    return this.http.post<any>(this.getBaseUrl(ApiActionName.SignUp), user);\r\n  }\r\n\r\n  updateUser(user: any): Observable<any> {\r\n    return this.http.put(this.getBaseUrl(ApiActionName.CreateUser), user);\r\n  }\r\n\r\n  signUpUser(user: any): Observable<any> {\r\n    return this.http.post<any>(this.getBaseUrl(ApiActionName.SignUp), user);\r\n  }\r\n\r\n  getUserById(userId: number): Observable<any> {\r\n    return this.http.get<any>(\r\n      this.getBaseUrl(`${ApiActionName.GetUserById}/${userId}`\r\n      )\r\n    );\r\n  }\r\n\r\n  emailSendOtp(email: string): Observable<any> {\r\n    return this.http.get<any>(\r\n      this.getBaseUrl(`${email}/${ApiActionName.SendOTP}`\r\n      )\r\n    );\r\n  }\r\n\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}