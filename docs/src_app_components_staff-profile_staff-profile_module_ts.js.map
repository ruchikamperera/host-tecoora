{"version":3,"file":"src_app_components_staff-profile_staff-profile_module_ts.js","mappings":"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","sources":["./src/app/components/staff-profile/profile/profile.component.ts","./src/app/components/staff-profile/profile/profile.component.html","./src/app/components/staff-profile/staff-profile-routing.module.ts","./src/app/components/staff-profile/staff-profile.module.ts","./src/app/shared/constants/enums/action-names.ts","./src/app/shared/services/01_base-service/base.service.ts","./src/app/shared/services/user.service.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  isEmpty: boolean;\r\n  staffs: any;\r\n  selectedStaff: any;\r\n  filterValue: Array<any> = [];\r\n  page: number;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getStaffList();\r\n  }\r\n\r\n  getStaffList(){\r\n    let user = {\r\n      userType: \"3\",\r\n      sortBy: \"\",\r\n      search: \"\"\r\n    }\r\n    this.userService.getUsersByType(user).subscribe(res => {\r\n      if(!res.data.length){\r\n        this.isEmpty = true;\r\n        console.log(this.isEmpty,'empty');\r\n      }\r\n        this.staffs = res.data;\r\n        this.filterValue = this.staffs;\r\n    })\r\n  }\r\n\r\n  filterByText(initial: string) {\r\n    this.staffs = this.filterValue;\r\n    this.staffs = this.staffs.filter(i => i.firstName.toLowerCase().indexOf(initial.toLocaleLowerCase()) !== -1);\r\n    console.log(this.staffs);\r\n  }\r\n\r\n  staffDetails(staff: any){\r\n    console.log(staff,'selected staff');\r\n    if(staff.dob){\r\n      staff.dob = staff.dob.split('T')[0];\r\n      console.log(staff.dob.split('T')[0]);\r\n    }\r\n    this.selectedStaff = staff;\r\n  }\r\n\r\n\r\n}\r\n","<h6 class=\"mb-0 text-uppercase\">Staff list</h6>\r\n<hr/>\r\n<div class=\"row my-3 justify-content-end\">\r\n  <div class=\"col-4\">\r\n    <input class=\"form-control\" type=\"text\" (keyup)=\"filterByText($event.target.value)\" placeholder=\"Search by name\">\r\n  </div>\r\n</div>\r\n<div *ngIf=\"isEmpty\">\r\n    <h4>Empty staff profiles</h4>\r\n</div>\r\n<div class=\"card radius-10\">\r\n   \r\n    <div class=\"card-body\">\r\n        <div class=\"table-responsive mt-4\">\r\n          <table class=\"table align-middle mb-0 table-hover\" id=\"Transaction-History\">\r\n              <thead class=\"table-light\">\r\n                  <tr>\r\n                      <th>Staff Name</th>\r\n                      <th>Company</th>\r\n                      <th>State</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n                  <tr *ngFor=\"let staff of staffs | paginate: {itemsPerPage: 10, currentPage:page, id: '1'}; let i = index\" class=\"clickable\" data-bs-toggle=\"modal\"\r\n                  data-bs-target=\"#exampleLargeModal\" (click)=\"staffDetails(staff)\">\r\n                      <td>\r\n                        <div class=\"d-flex align-items-center\">\r\n                            <div class=\"\" *ngIf=\"staff.profileImageUrl === null ; else second\">\r\n                              <img src=\"/assets/images/gallery/user_avatar.png\" alt=\"\" class=\"rounded-circle\" width=\"46\" height=\"46\">\r\n                            </div>\r\n                            <ng-template #second>\r\n                              <div class=\"\">\r\n                              <img src=\"{{staff.profileImageUrl}}\" alt=\"\" class=\"rounded-circle\" width=\"46\" height=\"46\">\r\n                              </div>\r\n                            </ng-template>\r\n                            <div class=\"ms-2\">\r\n                                <h6 class=\"mb-1 font-14\">{{staff.firstName}} {{staff.lastName}}</h6>\r\n                                <p class=\"mb-0 font-13 text-secondary\">{{staff.email}}</p>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td>{{staff.companyName}}</td>\r\n                    <td>{{staff.state}}</td>  \r\n                  </tr>\r\n              </tbody>\r\n          </table>\r\n          <pagination-controls (pageChange)=\"page = $event\" id=\"1\"\r\n                      maxSize=\"10\"\r\n                      directionLinks=\"true\"\r\n                      autoHide=\"true\">\r\n          </pagination-controls>\r\n      </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"col\">\r\n    <div class=\"modal fade\" id=\"exampleLargeModal\" tabindex=\"-1\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Staff details</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n              <div class=\"col-md-12\">\r\n                <label for=\"inputName\" class=\"form-label\">Name : {{selectedStaff?.firstName}} {{selectedStaff?.lastName}} </label>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                <label for=\"inputName\" class=\"form-label\">Email : {{selectedStaff?.email}}</label>\r\n              </div>\r\n              <div *ngIf=\"selectedStaff?.dob\"  class=\"col-md-12\">\r\n                <label for=\"inputName\" class=\"form-label\">Birthday : {{selectedStaff?.dob}}</label>\r\n              </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { ProfileComponent } from './profile/profile.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: '' , component: ProfileComponent, data: {title: 'Profile'} }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class StaffProfileRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { StaffProfileRoutingModule } from './staff-profile-routing.module';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProfileComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    StaffProfileRoutingModule,\r\n    NgxPaginationModule,\r\n    NgbModule\r\n  ]\r\n})\r\nexport class StaffProfileModule { }\r\n","export enum ApiActionName {\r\n  Login = 'login',\r\n  GetUserById = 'users',\r\n  GetUserByUserTypeOrSortByOrSerchByString = 'users',\r\n  CreateUser = 'user',\r\n  SignUp = 'signUp',\r\n  UpdateUser = 'user',\r\n  DeleteUserById = 'user/id',\r\n  SendOTP = 'sendOtp',\r\n  GetTimeSlotsByLawyerId = 'timeslots/lawyerId',\r\n  CreateTimeSlot = 'timeSlots',\r\n  GetStudentFormsByStudentId = 'studentPointForms/studentId',\r\n  CreateStudentForm = 'studentPointForms',\r\n  UpdateStudentForms = 'studentPointForms',\r\n  DeleteStudentFormById = 'studentPointForms/id',\r\n  GetCompanies = 'companies',\r\n  CreateCompany = 'company',\r\n  UpdateCompany = 'company',\r\n  DeleteCompany = 'company/id',\r\n  GetAppointments = 'appointments',\r\n  CreateAppointments = 'appointment',\r\n  UpdateAppointments = 'appointments',\r\n  DeleteAppointment = 'appointment/id',\r\n  GetAppointmentsByStatusOrLawyerId = 'appointments',\r\n  AddLawyerRequestedFile='lawyerRequestedFiles',\r\n  GetLawyerRequestedFile='getUserRequestedFiles',\r\n  UserFileDetails='userfiledetails',\r\n  UserFileUpload ='userFileUpload',\r\n  GetStudentUploadedFile='getUserUploadedFile',\r\n  deleteUploadedFile = 'userUploadedFile',\r\n  studentFileUpload = 'studentFileUpload',\r\n  getPointForm='questions',\r\n  getQuestion='question'\r\n}\r\n","import { environment } from 'src/environments/environment';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BaseService {\r\n\r\n  baseApiUrl:string = environment.baseApiUrl;\r\n  constructor() { }\r\n\r\n  public getBaseUrl = (route: string) => {\r\n    return `${this.baseApiUrl}/${route}`;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ApiActionName } from '../constants/enums/action-names';\r\nimport { BaseService } from './01_base-service/base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService extends BaseService {\r\n  constructor(private http: HttpClient) {\r\n    super();\r\n  }\r\n\r\n  getUsers(): Observable<any> {\r\n    return this.http.get<any[]>(this.getBaseUrl(ApiActionName.GetUserById));\r\n  }\r\n\r\n  getUsersByType(user: any): Observable<any> {\r\n    return this.http.post<any[]>(\r\n      this.getBaseUrl(ApiActionName.GetUserByUserTypeOrSortByOrSerchByString),\r\n      user\r\n    );\r\n  }\r\n\r\n  createUser(user: any): Observable<any> {\r\n    return this.http.post<any>(this.getBaseUrl(ApiActionName.SignUp), user);\r\n  }\r\n\r\n  updateUser(user: any): Observable<any> {\r\n    return this.http.put(this.getBaseUrl(ApiActionName.CreateUser), user);\r\n  }\r\n\r\n  signUpUser(user: any): Observable<any> {\r\n    return this.http.post<any>(this.getBaseUrl(ApiActionName.SignUp), user);\r\n  }\r\n\r\n  getUserById(userId: number): Observable<any> {\r\n    return this.http.get<any>(\r\n      this.getBaseUrl(`${ApiActionName.GetUserById}/${userId}`\r\n      )\r\n    );\r\n  }\r\n\r\n  emailSendOtp(email: string): Observable<any> {\r\n    return this.http.get<any>(\r\n      this.getBaseUrl(`${email}/${ApiActionName.SendOTP}`\r\n      )\r\n    );\r\n  }\r\n\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}